- name: Install ranger
  community.general.homebrew:
    name: ranger
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install fzf
  community.general.homebrew:
    name: fzf
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install chafa
  community.general.homebrew:
    name: chafa
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install beekeeper
  ansible.builtin.command: 'brew install --cask beekeeper-studio'
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install ninja build system tool
  community.general.homebrew:
    name: ninja
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install make
  community.general.homebrew:
    name: make
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install pandoc
  community.general.homebrew:
    name: pandoc
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install stow
  community.general.homebrew:
    name: stow
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install trash
  community.general.homebrew:
    name: trash
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install ripgrep
  community.general.homebrew:
    name: ripgrep
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install jq
  community.general.homebrew:
    name: jq
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install meson
  community.general.homebrew:
    name: meson
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install Brave
  ansible.builtin.command: 'brew install --cask brave-browser'
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install Slack
  ansible.builtin.command: 'brew install --cask slack'
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

# installs, but throws a missing checksum error
- name: Install Chrome
  ansible.builtin.command: 'brew install --cask google-chrome'
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install Postman
  ansible.builtin.command: 'brew install --cask postman'
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install Nordlayer VPN
  ansible.builtin.command: 'brew install --cask nordlayer'
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install MongoDB Compass
  ansible.builtin.command: 'brew install --cask mongodb-compass'
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install MongoDB Tools
  ansible.builtin.shell: |
    brew tap mongodb/brew
    brew install mongodb-database-tools
    brew upgrade mongodb-database-tools
  tags:
    - mac-setup

- name: Install Amethyst
  ansible.builtin.command: 'brew install --cask amethyst'
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install pyenv
  community.general.homebrew:
    name: pyenv
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Check if python version is installed
  ansible.builtin.stat:
    path: '{{ home }}/.pyenv/versions/{{ python_version }}'
  register: python_version_exists 
  tags:
    - mac-setup

- name: Install python version
  ansible.builtin.shell: 'pyenv install {{ python_version }}'
  when:
    - ansible_distribution == 'MacOSX'
    - not python_version_exists.stat.exists
  tags:
    - mac-setup

- name: Update zshrc - set pyenv root
  ansible.builtin.shell: echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Update zshrc - export it on path
  ansible.builtin.shell: echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Update zshrc - set pyenv init in terminal
  ansible.builtin.shell: echo 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init --path)"\n  eval "$(pyenv init -)"\nfi' >> ~/.zshrc
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install VSCode
  ansible.builtin.command: 'brew install --cask visual-studio-code'
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: cmake
  community.general.homebrew:
    name: cmake
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install Nerd Fonts
  ansible.builtin.shell: |
    brew tap homebrew/cask-fonts
    brew install --cask font-fantasque-sans-mono-nerd-font
    brew install --cask font-fira-code-nerd-font
    brew install --cask font-terminess-ttf-nerd-font
    brew install --cask font-hack-nerd-font
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install and start SHKD
  ansible.builtin.shell: |
    brew install koekeishiya/formulae/skhd
    skhd --start-service
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: htop
  community.general.homebrew:
    name: htop
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install 7z
  community.general.homebrew:
    name: sevenzip
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install Zsh Completions
  community.general.homebrew:
    name: zsh-completions
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

# - name: Force Rebuild zcompdump
#   ansible.builtin.shell: rm -f ~/.zcompdump && zsh -c "builtin autoload -XUz /usr/share/zsh/5.9/functions"
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup
