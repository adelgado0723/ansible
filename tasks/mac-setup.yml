- name: Install ranger
  community.general.homebrew:
    name: ranger
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install fzf
  community.general.homebrew:
    name: fzf
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install chafa
  community.general.homebrew:
    name: chafa
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

# installs, but throws an error
# - name: Install beekeeper
#   community.general.homebrew:
#     name: homebrew/cask/beekeeper-studio
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup

- name: Install ninja build system tool
  community.general.homebrew:
    name: ninja
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install make
  community.general.homebrew:
    name: make
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install pandoc
  community.general.homebrew:
    name: pandoc
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install stow
  community.general.homebrew:
    name: stow
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install trash
  community.general.homebrew:
    name: trash
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install ripgrep
  community.general.homebrew:
    name: ripgrep
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install jq
  community.general.homebrew:
    name: jq
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

- name: Install meson
  community.general.homebrew:
    name: meson
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

# installs, but throws an error
# - name: Install Brave
#   community.general.homebrew:
#     name: homebrew/cask/brave-browser
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup

# installs, but throws an error
# - name: Install Slack
#   community.general.homebrew:
#     name: homebrew/cask/slack
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup

# installs, but throws a missing checksum error
# - name: Install Chrome
#   community.general.homebrew:
#     name: homebrew/cask/google-chrome
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup

# installs, but throws an error
# - name: Install Postman
#   community.general.homebrew:
#     name: homebrew/cask/postman
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup

# installs, but throws an error
# - name: Install Nordlayer VPN
#   community.general.homebrew:
#     name: homebrew/cask/nordlayer
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup

# installs, but throws an error
# - name: Install Compass
#   community.general.homebrew:
#     name: homebrew/cask/mongodb-compass
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup

# installs, but throws an error
# - name: Install Amethyst
#   community.general.homebrew:
#     name: homebrew/cask/amethyst
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup

- name: Install pyenv
  community.general.homebrew:
    name: pyenv
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

# - name: Install python version
#   ansible.builtin.shell: pyenv install 3.11.5
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup
# 
# - name: Update zshrc - set pyenv root
#   ansible.builtin.shell: echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup
# 
# - name: Update zshrc - export it on path
#   ansible.builtin.shell: echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup
# 
# - name: Update zshrc - set pyenv init in terminal
#   ansible.builtin.shell: echo 'if command -v pyenv 1>/dev/null 2>&1; then\n  eval "$(pyenv init --path)"\n  eval "$(pyenv init -)"\nfi' >> ~/.zshrc
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup

# installs, but throws an error
# - name: Install VSCode
#   community.general.homebrew:
#     name: homebrew/cask/visual-studio-code
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup

- name: cmake
  community.general.homebrew:
    name: cmake
    state: present
  when: ansible_distribution == 'MacOSX'
  tags:
    - mac-setup

# - name: Install Nerd Fonts
#   ansible.builtin.shell: brew tap homebrew/cask-fonts
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup
#
# - name: Install FantasqueSansM Nerd Font
#   community.general.homebrew:
#     name: homebrew/cask/font-fantasque-sans-mono-nerd-font
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup
#
# - name: Install Fira Code
#   community.general.homebrew:
#     name: homebrew/cask/font-fira-code-nerd-font
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup
#
# - name: Install Terminess TTF Nerd Font
#   community.general.homebrew:
#     name: homebrew/cask/font-terminess-ttf-nerd-font
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup
#
# - name: Install Hack Nerd Font
#   community.general.homebrew:
#     name: homebrew/cask/font-hack-nerd-font
#     state: present
#   when: ansible_distribution == 'MacOSX'
#   tags:
#     - mac-setup
